:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    color: #ffffff;
    background-color: #242424;
  }
  .pickupPile {
    color: #213547;
  }
  .healthBarContent.healthBarContent {
    background: #330000;
  }
  .opponentHealthBar.opponentHealthBar, .playerHealthBar.playerHealthBar, .pressureBar.pressureBar, .playerCardCount.playerCardCount, .opponentCardCount.opponentCardCount, .cardRack.cardRack, .opponentHand.opponentHand, .resultScreen.resultScreen, .abilityChooser.abilityChooser {
    border-color: white;
    background: #333;
  }
  .cardInner.cardInner {
    background: var(--dark);
    color: white;
  }
  .towerCard.towerCard {
    border: 2px solid var(--color);
  }
}

#app {
  height: 100%;
  overflow-y: hidden;
}

.cardRack {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  width: calc(100vw - 2rem);
  height: 12rem;
  background: #eee;
  padding: 1rem;
  border-radius: 1rem;
  border: 1px solid #333;
  display: flex;
  gap: .5rem;
  overflow-x: scroll;
  overflow-y: hidden;
  box-sizing: border-box;
}

.cardRack:has(.dragging) {
  touch-action: none;
}

.pickupPile {
  position: absolute;
  top: 30vh;
  left: 10vw;
  padding: .75rem;
  border-radius: .5rem;
  background: #ccc;
  display: flex;
  flex-direction: column;
  gap: .3rem;
  cursor: pointer;
  width: 8.5rem;
  box-sizing: border-box;
}

.cardDiscard {
  position: absolute;
  top: 30vh;
  left: 30vw;
  padding: 1rem;
  border-radius: .5rem;
  transition: opacity 160ms;
}

.cardDiscard0 {
  left: 25vw;
}

.cardDiscard1 {
  left: calc(25vw + 9rem);
}
.cardDiscard2 {
  left: calc(25vw + 18rem);
}
.cardDiscard3 {
  left: calc(25vw + 27rem);
}

.randomOccuranceLabel {
  position: absolute;
  top: calc(30vh + 12rem);
  left: 30vw;
  transition: opacity 160ms;
}

.randomOccuranceLabel-1 {
  left: 12vw;
  top: calc(30vh + 11.5rem);
  color: white;
}
.randomOccuranceLabel0 {
  left: 26vw;
}

.randomOccuranceLabel1 {
  left: calc(26vw + 9rem);
}
.randomOccuranceLabel2 {
  left: calc(26vw + 18rem);
}
.randomOccuranceLabel3 {
  left: calc(26vw + 27rem);
}

.cardDiscard.drawPile {
  outline: 2px solid #dddd00;
}
.cardDiscard.closed {
  outline: 2px solid #ffaaaa;
  opacity: 0.5;
}

.dragging.card {
  position: fixed;
  cursor: grabbing;
  z-index: 2;
  touch-action: none;
}

.lockedPile {
  outline: 2px solid #333;
}

.dragTarget {
  outline: 2px solid #77ee77;
}

.unplayable.card, .unplayable {
  opacity: 0.5;
  cursor: not-allowed;
}

.opponentHand {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  padding: 1rem;
  background: #ccc;
  border-bottom-left-radius: 1rem;
}

.opponentHand .cardWrapper {
  margin-right: -4rem;
}

.opponentHand .cardWrapper:last-child {
  margin-right: 0;
}

.opponentHandLabel {
  position: absolute;
  top: 12rem;
  right: 5rem;
}
.cardDiscard .card {
  cursor: default;
}

.opponentHand .card {
  cursor: not-allowed;
}

div.selectedCard {
  outline: .3rem solid #77ff77;
  border-radius: .5rem;
}

.drawAmountText {
  position: absolute;
  top: 55vh;
  left: 25vw;
  font-weight: bold;
  font-size: 3rem;
}

.pressureBar {
  position: absolute;
  bottom: 45vh;
  right: 1vw;
  font-weight: bolder;
  font-size: 1.5;
  border: 1px solid black;
  background: #ccc;
  padding: .5rem;
  border-radius: .5rem;
  box-sizing: border-box;
}

.pressureBarContent {
  background: #ccffcc;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: .5rem;
  transition: width 1s;
  box-sizing: border-box;
}

.minipileOuter {
  position: absolute;
  top: 30vh;
  left: 0;
  width: calc(10vw + 10rem);
  height: 14rem;
  background: #002200;
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  padding: 1rem;
  box-sizing: border-box;
  color: white;
  display: flex;
  gap: 1rem;
  transition: left .5s;
}

.minipileExit {
  left: calc(-10vw + -10rem);
}

.minipileExit[hidden] {
  display: none;
}

.minipileInfo {
  width: 10vw;
  display: flex;
  flex-direction: column;
}

.minipileLabel {
  font-size: 1.2rem;
}

.minipileInner {
  height: 10rem;
  border-radius: .5rem;
  position: unset;
  padding: 0;
  transition: opacity 160ms;
}

.disabledPile {
  opacity: 0.5;
}

.colorChooser, .towerChooser {
  position: absolute;
  top: 30vh;
  right: 0;
  padding: 1rem;
  background: #000022dd;
  border-bottom-left-radius: .5rem;
  border-top-left-radius: .5rem;
  color: white;
  display: flex;
  flex-direction: column;
  font-size: 1.2rem;
  gap: 1rem;
  font-weight: 500;
  transition: right .5s;
  z-index: 2;
}
.towerChooser {
  background: #030300dd;
}

.colorChooserInner {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  gap: 1rem;
}

.colorEntry {
  width: 8vh;
  height: 8vh;
  border-radius: .3rem;
  cursor: pointer;
}

.colorChooserExit {
  right: calc(-5rem + -40vh);
}

.colorChooserExit[hidden] {
  display: none;
}

.useReflectBox {
  position: absolute;
  top: 30vh;
  right: 0;
  padding: 1rem;
  background: #220022dd;
  border-bottom-left-radius: .5rem;
  border-top-left-radius: .5rem;
  color: white;
  display: flex;
  gap: 1rem;
  transition: right 160ms;
}

.reflectDisplay {
  height: 10rem;
  width: 7rem;
  position: fixed;
  right: 9rem;
}

.reflectDisplay .card {
  cursor: default;
}

.reflectDisplayGap {
  height: 10rem;
  width: 7rem;
}
.reflectBoxExit {
  right: -18rem;
}
.reflectBoxExit[hidden] {
  display: none;
}
.reflectBoxPanel {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.useReflectBox button {
  background-color: #ffaaff;
  border: 2px solid black;
  text-align: center;
  font-size: 1rem;
  border-radius: .5rem;
  padding: .2rem;
  cursor: pointer;
  transition: background-color .2s;
}
.useReflectBox button:hover {
  background-color: #ee77ee;
}

.lotteryRow {
  display: flex;
  position: absolute;
  top: 40vh;
  left: calc(50vw - 17.5rem);
  gap: 1rem;
  z-index: 3;
}

.cardLotteryRow {
  display: flex;
  position: absolute;
  top: 40vh;
  left: calc(50vw - 8.5rem);
  gap: 1rem;
  z-index: 3;
}

.lotteryDice {
  width: 5rem;
  height: 5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  border: 2px solid black;
  border-radius: .5rem;
  box-sizing: border-box;
  z-index: 3;
}
.lotteryDiceLong {
  width: 11rem;
}

@keyframes lotteryDice {
  from {
    position: fixed;
    top: calc(100vh + -5rem);
  }
  to {
    position: fixed;
    top: 40vh;
  }
}

.lotteryDarken {
  width: 100vw;
  height: 100vh;
  background: #0000007f;
  position: fixed;
  transition: opacity 1s;
  z-index: 2;
}

@keyframes lotteryOpacityIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes lotteryOpacityOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.lotteryResult {
  position: absolute;
  z-index: 2;
  left: 50vw;
  transform: translateX(-50%);
  top: 20vh;
  color: white;
  font-size: 2rem;
}

.playerCardCount {
  position: absolute;
  bottom: 13rem;
  left: 1rem;
  padding: 1rem;
  background: #ccc;
  width: 1rem;
  height: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  border-radius: 1rem;
}

.opponentCardCount {
  position: absolute;
  top: 12rem;
  right: 1rem;
  padding: 1rem;
  background: #ccc;
  width: 1rem;
  height: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  border-radius: 1rem;
}

.resultScreen {
  position: fixed;
  width: 80vw;
  height: 80vh;
  background: white;
  border: 2px solid black;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  z-index: 10;
}

.resultScreen[hidden] {
  display: none;
}

.reobtainRack {
  position: absolute;
  bottom: 13rem;
  right: 0;
  padding: 1rem;
  background: #333300;
  display: flex;
  gap: 1rem;
  width: fit-content;
  border-top-left-radius: 1rem;
  border-bottom-left-radius: 1rem;
}

.reobtainRack[hidden] {
  display: none;
}

@keyframes moveRightOut {
  from {
    right: 0;
  }
  to {
    right: -38vw;
  }
}

@keyframes moveLeftIn {
  from {
    right: -38vw;
  }
  to {
    right: 0;
  }
}

.cardEntry {
  display: flex;
  flex-direction: column;
  gap: .2rem;
}

.cardEntry button {
  background: #ffffbb;
  border: 1px solid black;
  border-radius: .3rem;
}

.playerLiveCounter {
  position: fixed;
  right: 8rem;
  bottom: 14rem;
  font-weight: bolder;
  font-size: 1.5;
}

.opponentLiveCounter {
  position: fixed;
  right: 5em;
  top: 13.5rem;
  font-weight: bolder;
  font-size: 1.5;
}

.playerHealthBar {
  position: fixed;
  right: 1rem;
  bottom: 14rem;
  font-weight: bolder;
  font-size: 1.5;
  border: 1px solid black;
  background: #ccc;
  padding: .5rem;
  border-radius: .5rem;
}

.opponentHealthBar {
  position: fixed;
  right: 1rem;
  top: 15.5rem;
  font-weight: bolder;
  font-size: 1.5;
  border: 1px solid black;
  background: #ccc;
  padding: .5rem;
  border-radius: .5rem;
  box-sizing: border-box;
}

.healthBarContent {
  background: #ffcccc;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: .5rem;
  transition: width 1s;
  box-sizing: border-box;
}

.opponentHealthCount, .playerHealthCount, .pressureCount {
  position: relative;
  z-index: 2;
}

.abilityChooser {
  position: fixed;
  width: 80vw;
  height: 80vh;
  background: white;
  border: 2px solid black;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 1rem;
  display: flex;
  font-size: 2rem;
  flex-direction: column;
  padding: 1rem;
  z-index: 10;
  gap: 1rem;
}

.abilityChooser[hidden] {
  display: none;
}

@keyframes abilityChooserOut {
  from {
    left: 50%;
    transform: translate(-50%, -50%);
  }
  to {
    transform: translate(0, 0);
    left: 100vw;
  }
}

.dangerCardArea {
  position: absolute;
  top: 3vh;
  left: 10vw;
}

.dangerCardArea .card {
  cursor: default;
}

@media (min-width: 1000px) and (max-width: 1300px) {
  .opponentHand .cardWrapper {
    margin-right: -5.4rem;
  }
}

@media (min-width: 950px) and (max-width: 999px) {
  .opponentHand .cardWrapper {
    margin-right: -5.55rem;
  }
}

@media (min-width: 640px) and (max-width: 949px) and (max-height: 900px) {
  :root {
    font-size: 0.8em;
  }
}

@media (min-width: 640px) and (max-width: 949px) {
  .opponentHand {
    padding: .7rem;
  }
  .opponentHand .cardWrapper {
    margin-right: -5.9rem;
  }
}

/*@media (min-height: 511px) and (max-height: 600px) {*/
@media (min-width: 320px) and (max-width: 750px) {
  :root {
    font-size: 0.7em;
  }  
  .opponentHand {
    transform: translateY(-50%);
    padding: .7rem;
  }
  .opponentHand .cardWrapper {
    margin-right: -6.2rem;
  }

  .playerCardCount {
    left: 11rem;
    bottom: 12.5rem;
  }
  .playerLiveCounter {
    bottom: 12.5rem;
  }
  .playerHealthBar {
    bottom: 12.5rem;
    height: fit-content;
  }
  .opponentHealthBar {
    top: 6rem;
    right: 15rem;
    left: unset;
    height: fit-content;
  }
  .opponentHandLabel.opponentHandLabel {
    top: 6rem;
    right: 5rem;
    font-size: 1.2rem;
  }
  .opponentLiveCounter {
    top: 7.5rem;
    left: unset;
    right: 5rem;
    font-size: 1.2rem;
  }
  .opponentCardCount {
    top: 6rem;
    font-size: 1.2rem;
  }
  .cardRack {
    left: 0;
    bottom: 0;
    width: 100vw;
  }
  .pickupPile {
    left: 2rem;
    top: unset;
    bottom: 13rem;
  }
  .cardDiscard0 {
    left: 35vw;
    top: 20vh;
  }
  .cardDiscard1 {
    left: unset;
    right: 5vw;
    top: 20vh;
  }
  .cardDiscard2 {
    left: 35vw;
    top: 45vh;
  }
  .cardDiscard3 {
    left: unset;
    right: 5vw;
    top: 45vh;
  }
  .dangerCardArea {
    left: .5rem;
    top: 6rem;
  }
  .pressureBar {
    left: .5rem;
    right: unset;
    top: 35vh;
    bottom: unset;
  }
  .drawAmountText {
    position: absolute;
    left: 12rem;
    top: unset;
    bottom: 16rem;
  }
  .cardLoanRemaining.cardLoanRemaining {
    left: 12rem;
    bottom: 16rem;
  }
}

/*
@media (min-width: 0px) and (max-width: 639px) {
  :root {
    font-size: 0.5em;
  }
  .opponentHand {
    padding: .7rem;
    transform: translateY(-50%);
  }
  .opponentHand .cardWrapper {
    margin-right: -8rem;
  }
  .cardRack .card.card {
    padding: .2rem;
    height: 14rem;
    width: 10rem;
  }
  .cardRack .cardWrapper.cardWrapper {
    font-size: 1.5rem;
    padding: .2rem;
    height: 14rem;
    width: 10rem;
    min-height: 14rem;
    min-width: 10rem;
  }
  .cardRack {
    height: 16rem;
  }
  .cardDescriptionSpan.cardDescriptionSpan, .cardModifierSpan.cardModifierSpan {
    font-size: 1.2rem;
  }
}*/


@media (min-height: 511px) and (max-height: 550px) {
  .cardRack {
    bottom: 0vh;
  }
}

@media (min-height: 0px) and (max-height: 510px) {
  .pickupPile {
    top: 26.5vh;
  }
  
  .opponentHand {
    transform: translateY(-80%);
  }

  .opponentHand .cardWrapper {
    margin-right: -6rem;
  }

  .pickupPile {
    top: 12vh;
    font-size: .9rem;
  }
  .cardDiscard {
    top: 10vh;
  }
  .cardRack {
    bottom: 0vh;
  }
  .pressureBar {
    bottom: 14rem;
    left: 50vw;
    width: fit-content;
    height: fit-content;
    transform: translateX(-50%);
  }
  .playerLiveCounter {
    bottom: 13rem;
  }
  .playerHealthBar {
    bottom: 13rem;
    height: fit-content;
  }
  .opponentHealthBar {
    top: 3rem;
    height: fit-content;
  }
  .opponentHandLabel {
    top: 3rem;
    left: 80vw;
  }
  .opponentLiveCounter {
    top: 4.5rem;
    left: 80vw;
  }
  .opponentCardCount {
    top: 6rem;
  }

  .dangerCardArea {
    left: unset;
    right: 8rem;
    top: 6.5rem;
  }
}

@media (min-height: 0px) and (max-height: 409px) {
  :root {
    font-size: 0.7em;
  }
  .opponentHand {
    transform: translateY(-80%);
  }

  .opponentHand .cardWrapper {
    margin-right: -6rem;
  }

}

/*
@media (min-height: 0px) and (max-height: 400px) {
  :root {
    font-size: 0.85em;
  }
  .cardDiscard .cardWrapper, .cardDiscard .card {
    height: 5rem;
    width: 3.5rem;
  }
  .cardRack {

  }
}*/

.giveCardAwayOuter {
  position: absolute;
  top: 30vh;
  left: 0;
  width: calc(10vw + 10rem);
  height: 14rem;
  background: #000022;
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  padding: 1rem;
  box-sizing: border-box;
  color: white;
  display: flex;
  gap: 1rem;
  transition: left .5s;
  z-index: 6;
}

.giveCardAwayOuter[hidden] {
  display: none;
}

.giveCardAwayInfo {
  width: 10vw;
  display: flex;
  flex-direction: column;
}

.giveCardAwayLabel {
  font-size: 1.2rem;
}

.giveCardAwayInner {
  height: 10rem;
  width: 7rem;
  border-radius: .5rem;
  position: unset;
  padding: 0;
  transition: opacity 160ms;
  border: 2px dotted white;
}

@keyframes giveCardAwayExit {
  from {
    left: 0;
  }
  to {
    left: calc(-10vw + -10rem);
  }
}

@keyframes giveCardAwayEnter {
  from {
    left: calc(-10vw + -10rem);
  }
  to {
    left: 0;
  }
}


@media (min-width: 1650px) and (min-height: 1000px) {
  .cardRack {
    display: grid;
    grid-template-columns: repeat(13, 1fr);
    height: 23rem;
  }
  .playerHealthBar, .playerLiveCounter, .playerCardCount {
    bottom: 25rem;
  }
  .pressureBar {
    top: 40vh;
    height: fit-content;
  }
}

.pickupQueue {
  position: absolute;
  z-index: 1;
  right: .25rem;
  bottom: 1.75rem;
}

.pickupQueue .cardWrapper:nth-child(4) {
  position: absolute;
  z-index: 0;
  position: absolute;
  right: 0rem;
  bottom: 0rem;
}

.pickupQueue .cardWrapper:nth-child(3) {
  position: absolute;
  right: 0.75rem;
  bottom: 0.75rem;
  z-index: 1;
}

.pickupPile.animate .pickupQueue .cardWrapper:nth-child(3) {
  animation: cardMoveUp3 .3s;
}

@keyframes cardMoveUp3 {
  from {
    right: 0rem;
    bottom: 0rem;
  }
  to {
    right: .75rem;
    bottom: .75rem;
  }
}

.pickupQueue .cardWrapper:nth-child(2) {
  position: absolute;
  right: 1.5rem;
  bottom: 1.5rem;
  z-index: 2;
}

.pickupPile.animate .pickupQueue .cardWrapper:nth-child(2) {
  animation: cardMoveUp2 .3s;
}

@keyframes cardMoveUp2 {
  from {
    right: .75rem;
    bottom: .75rem;
  }
  to {
    right: 1.5rem;
    bottom: 1.5rem;
  }
}

.pickupQueue .cardWrapper:nth-child(1) {
  position: absolute;
  right: 2.25rem;
  bottom: 2.25rem;
  z-index: 3;
}

.pickupPile.animate .pickupQueue .cardWrapper:nth-child(1) {
  animation: cardMoveUp1 .3s;
}

@keyframes cardMoveUp1 {
  from {
    right: 1.5rem;
    bottom: 1.5rem;
  }
  to {
    right: 2.25rem;
    bottom: 2.25rem;
  }
}

.pickupPile > .cardWrapper {
  z-index: 4;
  position: relative;
  right: 2.5rem;
  bottom: 4rem;
}

.pickupPile.animate > .cardWrapper {
  animation: cardMoveUp0 .3s;
}

@keyframes cardMoveUp0 {
  from {
    right: 1.75rem;
    bottom: 3.25rem;
  }
  to {
    right: 2.5rem;
    bottom: 4rem;
  }
}

.pickupLabel {
  z-index: 5;
  background: #ffffffcf;
  padding: .25rem;
  border: 1px solid black;
  border-radius: .25rem;
  position: relative;
  bottom: 3rem;
  left: 1rem;
}

.cardLoanRemaining {
  position: absolute;
  bottom: 14rem;
  left: 70rem;
  font-weight: bold;
}

.towerEntry {
  width: 8vh;
  height: 8vh;
  border-radius: .3rem;
  cursor: pointer;
}

.towerChooserInner {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}