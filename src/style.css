:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
}

#app {
  height: 100%;
  overflow-y: hidden;
}

.cardRack {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  width: calc(100vw - 2rem);
  height: 12rem;
  background: #eee;
  padding: 1rem;
  border-radius: 1rem;
  border: 1px solid #333;
  display: flex;
  gap: .5rem;
  overflow-x: scroll;
  overflow-y: hidden;
  box-sizing: border-box;
}

.pickupPile {
  position: absolute;
  top: 30vh;
  left: 10vw;
  padding: 1rem;
  border-radius: .5rem;
  background: #ccc;
  display: flex;
  flex-direction: column;
  gap: .3rem;
  cursor: pointer;
}

.cardDiscard {
  position: absolute;
  top: 30vh;
  left: 30vw;
  padding: 1rem;
  border-radius: .5rem;
  transition: opacity 160ms;
}

.cardDiscard0 {
  left: 25vw;
}

.cardDiscard1 {
  left: calc(25vw + 9rem);
}
.cardDiscard2 {
  left: calc(25vw + 18rem);
}
.cardDiscard3 {
  left: calc(25vw + 27rem);
}

.cardDiscard.drawPile {
  outline: 2px solid #dddd00;
}
.cardDiscard.closed {
  outline: 2px solid #ffaaaa;
  opacity: 0.5;
}

.dragging.card {
  position: fixed;
  cursor: grabbing;
  z-index: 2;
}

.lockedPile {
  outline: 2px solid #333;
}

.dragTarget {
  outline: 2px solid #77ee77;
}

.unplayable.card, .unplayable {
  opacity: 0.5;
  cursor: not-allowed;
}

.opponentHand {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  padding: 1rem;
  background: #ccc;
  border-bottom-left-radius: 1rem;
}

.opponentHand .cardWrapper {
  margin-right: -4rem;
}

.opponentHand .cardWrapper:last-child {
  margin-right: 0;
}

.cardDiscard .card {
  cursor: default;
}

.opponentHand .card {
  cursor: not-allowed;
}

div.selectedCard {
  outline: .3rem solid #77ff77;
  border-radius: .5rem;
}

.drawAmountText {
  position: absolute;
  top: 30vh;
  left: 22vw;
  font-weight: bold;
  font-size: 3rem;
}

.pressureCount {
  position: absolute;
  bottom: 35vh;
  right: 1vw;
  font-weight: bolder;
  font-size: 1.5;
}

.minipileOuter {
  position: absolute;
  top: 30vh;
  left: 0;
  width: calc(10vw + 10rem);
  height: 14rem;
  background: #002200;
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  padding: 1rem;
  box-sizing: border-box;
  color: white;
  display: flex;
  gap: 1rem;
  transition: left .5s;
}

.minipileExit {
  left: calc(-10vw + -10rem);
}

.minipileInfo {
  width: 10vw;
  display: flex;
  flex-direction: column;
}

.minipileLabel {
  font-size: 1.2rem;
}

.minipileInner {
  height: 10rem;
  border-radius: .5rem;
  position: unset;
  padding: 0;
  transition: opacity 160ms;
}

.disabledPile {
  opacity: 0.5;
}

.colorChooser {
  position: absolute;
  top: 30vh;
  right: 0;
  padding: 1rem;
  background: #000022dd;
  border-bottom-left-radius: .5rem;
  border-top-left-radius: .5rem;
  color: white;
  display: flex;
  flex-direction: column;
  font-size: 1.2rem;
  gap: 1rem;
  font-weight: 500;
  transition: right .5s;
}

.colorChooserInner {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  gap: 1rem;
}

.colorEntry {
  width: 8vh;
  height: 8vh;
  border-radius: .3rem;
  cursor: pointer;
}

.colorChooserExit {
  right: calc(-5rem + -40vh);
}

.useReflectBox {
  position: absolute;
  top: 30vh;
  right: 0;
  padding: 1rem;
  background: #220022dd;
  border-bottom-left-radius: .5rem;
  border-top-left-radius: .5rem;
  color: white;
  display: flex;
  gap: 1rem;
  transition: right 160ms;
}

.reflectDisplay {
  height: 10rem;
  width: 7rem;
  position: fixed;
  right: 9rem;
}

.reflectDisplay .card {
  cursor: default;
}

.reflectDisplayGap {
  height: 10rem;
  width: 7rem;
}
.reflectBoxExit {
  right: -18rem;
}
.reflectBoxPanel {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.useReflectBox button {
  background-color: #ffaaff;
  border: 2px solid black;
  text-align: center;
  font-size: 1rem;
  border-radius: .5rem;
  padding: .2rem;
  cursor: pointer;
  transition: background-color .2s;
}
.useReflectBox button:hover {
  background-color: #ee77ee;
}